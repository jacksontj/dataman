- interact with "metadata"
    -- do schema enforcement/validation/etc.
    -- user access control
    -- configure/use indexes as defined
    -- API to track in-progress changes (schema etc.)
- determine the primary key of items based on schema (instead of hard-coded id?) (or require id always?)
- admin API (for internal use)
    -- add/remove databases -- this should be more-or-less separate from the router API
- separate deserialization as its own pluggable thing in the http API (probably in some shared lib-- since we'll use it in both the router and storage nodes)
- tombstone stuff (background job to do queries to find it)
